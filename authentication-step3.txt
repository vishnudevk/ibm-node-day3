var express = require("express");
var bodyParser = require("body-parser");
var mongoose = require("mongoose");
var path = require("path");

var Schema = mongoose.Schema;
var ObjectId = Schema.ObjectId;

var User = mongoose.model("User", new Schema({
	id : ObjectId,
	firstName : String,
	lastName : String,
	email : {type : String, unique : true},
	password : String
}))

var app = express();
//	app.locals.pretty = true;
    app.use(bodyParser.urlencoded({ extended : true }));
    app.set('views', path.join(__dirname, '/views3'));
	mongoose.connect("mongodb://localhost/ibmuser");
	
app.get("/", function(req, res){
	res.render("index.jade");
});

app.get("/register", function(req, res){
	res.render("register.jade");
});

app.post("/register", function(req, res){
	// res.json(req.body);
	var user = new User({
		firstName : req.body.firstName,
		lastName : req.body.lastName,
		email : req.body.email,
		password : req.body.password,
	});
	
	user.save(function(err){
		if(err){
			if(err.code === 11000){
				error = "eMail id already used"
			}else{
				error = "some thing went wrong"
			}
			res.render("register.jade",{
				error : error
			})
		}else{
			res.redirect("/profile");
		};
		
	});
});

app.get("/login", function(req, res){
	res.render("login.jade");
});

app.post("/login", function(req, res){
	User.findOne({ email:req.body.email }, function(error, user){
		if(!user){
			res.render("login.jade",{
				error : "  no user by that credentials "
			})
		}else{
			if(req.body.password === user.password){
				res.redirect("/profile");
			}else{
				res.render("login.jade",{
					error : "Invalid email or password "
				})
			}
		}
	})
});

app.get("/profile", function(req, res){
	res.render("profile.jade");
});

app.get("/logout", function(req, res){
	res.redirect("/")
});

app.listen(3000);
console.log("server is now running on localhost : 3000");
